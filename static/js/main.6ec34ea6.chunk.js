(this["webpackJsonpbulletin-board"]=this["webpackJsonpbulletin-board"]||[]).push([[0],{16:function(t,e,n){},17:function(t,e,n){"use strict";n.r(e);var i=n(0),r=n.n(i),o=n(2),s=n.n(o),a=n(5),c=n(7),u=(n(3),n(6)),h=n.n(u),l=n(4)({displayName:"Note",getInitialState:function(){return{editing:!1}},componentWillMount:function(){this.style={right:this.randomBetween(0,window.innerWidth-150,"px"),top:this.randomBetween(0,window.innerHeight-150,"px")}},componentDidUpdate:function(){this.state.editing&&(this.refs.newText.focus(),this.refs.newText.select())},shouldComponentUpdate:function(t,e){return this.props.children!==t.children||this.state!==e},randomBetween:function(t,e,n){return t+Math.ceil(Math.random()*(e-t))+n},edit:function(){this.setState({editing:!0})},save:function(){this.props.onChange(this.refs.newText.value,this.props.id),this.setState({editing:!1})},remove:function(){this.props.onRemove(this.props.id)},renderForm:function(){return r.a.createElement("div",{className:"note",style:this.style},r.a.createElement("textarea",{ref:"newText",defaultValue:this.props.children}),r.a.createElement("button",{onClick:this.save},"SAVE"))},renderDisplay:function(){return r.a.createElement("div",{className:"note",style:this.style},r.a.createElement("p",null,this.props.children),r.a.createElement("span",null,r.a.createElement("button",{onClick:this.edit},"EDIT"),r.a.createElement("button",{onClick:this.remove},"X")))},render:function(){return r.a.createElement(h.a,null,this.state.editing?this.renderForm():this.renderDisplay())}});function d(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,i)}return n}var p=n(4)({displayName:"Board",getInitialState:function(){return{notes:[]}},componentWillMount:function(){var t=this;if(this.props.count){var e="https://baconipsum.com/api/?type=all-meat&sentences=".concat(this.props.count);fetch(e).then((function(t){return t.json()})).then((function(t){return t[0]})).then((function(t){return t.split(". ")})).then((function(e){return e.forEach((function(e){return t.add(e)}))})).catch((function(t){console.log("Couldn't connect to the Bacon API",t)}))}},nextId:function(){return this.uniqueId=this.uniqueId||0,this.uniqueId++},add:function(t){var e=[].concat(Object(c.a)(this.state.notes),[{id:this.nextId(),note:t}]);this.setState({notes:e})},update:function(t,e){var n=this.state.notes.map((function(n){return n.id!==e?n:function(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?d(Object(n),!0).forEach((function(e){Object(a.a)(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):d(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}({},n,{note:t})}));this.setState({notes:n})},remove:function(t){var e=this.state.notes.filter((function(e){return e.id!==t}));this.setState({notes:e})},eachNote:function(t){return r.a.createElement(l,{key:t.id,id:t.id,onChange:this.update,onRemove:this.remove},t.note)},render:function(){var t=this;return r.a.createElement("div",{className:"board"},this.state.notes.map(this.eachNote),r.a.createElement("button",{onClick:function(){return t.add("New Note")}},"+"))}});n(16);s.a.render(r.a.createElement(p,{count:25}),document.getElementById("react-container"))},3:function(t,e,n){},8:function(t,e,n){t.exports=n(17)}},[[8,1,2]]]);
//# sourceMappingURL=main.6ec34ea6.chunk.js.map